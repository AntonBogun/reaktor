600 REM print maze
610 IF maze_drawn THEN GOTO 730
620 LET maze_drawn = 1
630 LET pr = PEEK(1) : LET pc = PEEK(2) : REM player row, column
640 CLS : REM the first time around we need to draw the maze
650 LOCATE 2,1
660 FOR row = 0 TO height-1
670     LET s$ = ""
680     FOR col = 0 TO width-1
690         LET cell = PEEK(16 + row * width + col)
700         s$ = s$ + MID$(" X", cell, 1)
710     NEXT col
711     PRINT s$
720 NEXT row
730 REM erase the previous player position and print the new one
740 LOCATE 2+pr, 1+pc : PRINT " ";
750 pr = PEEK(1) : pc = PEEK(2)
760 LOCATE 2+pr, 1+pc : PRINT "@";
770 REM print the number of steps so far
780 LOCATE 1,10 : PRINT "STEPS: "; steps;
790 LET steps = steps + 1
800 RETURN

1000 REM calculate player direction
1010 LET player_row = PEEK(1)
1020 LET player_col = PEEK(2)
1030 REM these variables tell whether there's a wall in that direction
1040 LET right = PEEK(16 + player_row * width + player_col + 1)
1050 LET down = PEEK(16 + (player_row+1) * width + player_col)
1060 LET left = PEEK(16 + player_row * width + player_col - 1)
1070 LET up = PEEK(16 + (player_row-1) * width + player_col)
1080 REM TODO: write the next direction at memory address 0
1090 REM directions: 0=right, 1=down, 2=left, 3=up

1100 REM here's an interactive version
1110 GET key
1120 IF key = -2 THEN POKE 0, 1 : RETURN : REM no user present
1130 IF key = -1 THEN PAUSE 100: GOTO 1110 : REM wait for input
1140 IF key = 13 THEN STOP : REM user wants out
1150 IF key = 0 THEN
1160     IF right = 0 THEN GOTO 1250
1170 ELSE IF key = 1 THEN
1180     IF down = 0 THEN GOTO 1250
1190 ELSE IF key = 2 THEN
1200     IF left = 0 THEN GOTO 1250
1210 ELSE IF key = 3 THEN
1220     IF up = 0 THEN GOTO 1250
1230 END IF
1240 PAUSE 100 : GOTO 1110 : REM ignore key, wait for next one
1250 POKE 0, key
1251 GOSUB 1300
1252 RETURN



1300 REM find next rotation
1300 goto 1308
1301 if calc_path then goto 1308
1302 calc_path = 1
1303 gosub 1324
1304 gosub 1329
1305 gosub 1354
1306 gosub 1440
1307 gosub 1333
1308 REM playerx=peek(2):playery=peek(1)
1309 REM playerdir=grid(playerx,playery)
1310 REM if playerdir=-1 then return
1311 REM poke 0,playerdir
1312 locate peek(6),1
1313 REM print playerdir;
1314 REM print sizex;";";sizey;";";endx;";";endy;";";
1315 for djjsdoij=1 to 3
1316     print djjsdoij;
1317     next djjsdoij
1318 REM gosub 1333
1319 return
